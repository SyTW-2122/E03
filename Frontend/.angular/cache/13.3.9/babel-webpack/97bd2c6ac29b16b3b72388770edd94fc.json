{"ast":null,"code":"function cov_1uz5m28kfz() {\n  var path = \"/home/usuario/cinemart/Frontend/src/app/services/user.service.ts\";\n  var hash = \"8f9441328efdfa95c70ff9b605590ed8f53f8348\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/usuario/cinemart/Frontend/src/app/services/user.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 16\n        },\n        end: {\n          line: 5,\n          column: 34\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 18\n        },\n        end: {\n          line: 19,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 8\n        },\n        end: {\n          line: 8,\n          column: 25\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 72\n        }\n      },\n      \"4\": {\n        start: {\n          line: 14,\n          column: 8\n        },\n        end: {\n          line: 14,\n          column: 73\n        }\n      },\n      \"5\": {\n        start: {\n          line: 17,\n          column: 8\n        },\n        end: {\n          line: 17,\n          column: 74\n        }\n      },\n      \"6\": {\n        start: {\n          line: 20,\n          column: 0\n        },\n        end: {\n          line: 22,\n          column: 2\n        }\n      },\n      \"7\": {\n        start: {\n          line: 20,\n          column: 35\n        },\n        end: {\n          line: 22,\n          column: 1\n        }\n      },\n      \"8\": {\n        start: {\n          line: 23,\n          column: 0\n        },\n        end: {\n          line: 27,\n          column: 16\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 7,\n            column: 4\n          },\n          end: {\n            line: 7,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 7,\n            column: 22\n          },\n          end: {\n            line: 9,\n            column: 5\n          }\n        },\n        line: 7\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 23\n          },\n          end: {\n            line: 12,\n            column: 5\n          }\n        },\n        line: 10\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 13,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 19\n          },\n          end: {\n            line: 15,\n            column: 5\n          }\n        },\n        line: 13\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 4\n          },\n          end: {\n            line: 16,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 20\n          },\n          end: {\n            line: 18,\n            column: 5\n          }\n        },\n        line: 16\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 29\n          },\n          end: {\n            line: 20,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 35\n          },\n          end: {\n            line: 22,\n            column: 1\n          }\n        },\n        line: 20\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"user.service.js\",\n      sourceRoot: \"\",\n      sources: [\"/home/usuario/cinemart/Frontend/src/app/services/user.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC;IAKtB,WAAW,SAAX,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACpE,CAAC;CACF,CAAA;;YAvBQ,UAAU;;AASN,WAAW;IAHvB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAcvB;SAdY,WAAW\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\nimport { HttpClient } from '@angular/common/http';\\nimport { Observable } from 'rxjs';\\nimport { environment } from 'src/environments/environment';\\n\\nconst API_URL = environment.apiUrl;\\n\\n@Injectable({\\n  providedIn: 'root',\\n})\\nexport class UserService {\\n  constructor(private http: HttpClient) {}\\n\\n  getPublicContent(): Observable<any> {\\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\\n  }\\n\\n  getUserBoard(): Observable<any> {\\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\\n  }\\n\\n  getAdminBoard(): Observable<any> {\\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\\n  }\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"8f9441328efdfa95c70ff9b605590ed8f53f8348\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1uz5m28kfz = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1uz5m28kfz();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = (cov_1uz5m28kfz().s[0]++, environment.apiUrl);\ncov_1uz5m28kfz().s[1]++;\nlet UserService = class UserService {\n  constructor(http) {\n    cov_1uz5m28kfz().f[0]++;\n    cov_1uz5m28kfz().s[2]++;\n    this.http = http;\n  }\n\n  getPublicContent() {\n    cov_1uz5m28kfz().f[1]++;\n    cov_1uz5m28kfz().s[3]++;\n    return this.http.get(API_URL + 'all', {\n      responseType: 'text'\n    });\n  }\n\n  getUserBoard() {\n    cov_1uz5m28kfz().f[2]++;\n    cov_1uz5m28kfz().s[4]++;\n    return this.http.get(API_URL + 'user', {\n      responseType: 'text'\n    });\n  }\n\n  getAdminBoard() {\n    cov_1uz5m28kfz().f[3]++;\n    cov_1uz5m28kfz().s[5]++;\n    return this.http.get(API_URL + 'admin', {\n      responseType: 'text'\n    });\n  }\n\n};\ncov_1uz5m28kfz().s[6]++;\n\nUserService.ctorParameters = () => {\n  cov_1uz5m28kfz().f[4]++;\n  cov_1uz5m28kfz().s[7]++;\n  return [{\n    type: HttpClient\n  }];\n};\n\ncov_1uz5m28kfz().s[8]++;\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserService);\nexport { UserService };","map":{"version":3,"sources":["/home/usuario/cinemart/Frontend/src/app/services/user.service.ts"],"names":["__decorate","Injectable","HttpClient","environment","API_URL","apiUrl","UserService","constructor","http","getPublicContent","get","responseType","getUserBoard","getAdminBoard","ctorParameters","type","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,MAAMC,OAAO,6BAAGD,WAAW,CAACE,MAAf,CAAb;;AACA,IAAIC,WAAW,GAAG,MAAMA,WAAN,CAAkB;AAChCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;AAAA;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AAAA;AAAA;AACf,WAAO,KAAKD,IAAL,CAAUE,GAAV,CAAcN,OAAO,GAAG,KAAxB,EAA+B;AAAEO,MAAAA,YAAY,EAAE;AAAhB,KAA/B,CAAP;AACH;;AACDC,EAAAA,YAAY,GAAG;AAAA;AAAA;AACX,WAAO,KAAKJ,IAAL,CAAUE,GAAV,CAAcN,OAAO,GAAG,MAAxB,EAAgC;AAAEO,MAAAA,YAAY,EAAE;AAAhB,KAAhC,CAAP;AACH;;AACDE,EAAAA,aAAa,GAAG;AAAA;AAAA;AACZ,WAAO,KAAKL,IAAL,CAAUE,GAAV,CAAcN,OAAO,GAAG,OAAxB,EAAiC;AAAEO,MAAAA,YAAY,EAAE;AAAhB,KAAjC,CAAP;AACH;;AAZ+B,CAApC;;;AAcAL,WAAW,CAACQ,cAAZ,GAA6B,MAAM;AAAA;AAAA;AAAA,UAC/B;AAAEC,IAAAA,IAAI,EAAEb;AAAR,GAD+B;AAElC,CAFD;;;AAGAI,WAAW,GAAGN,UAAU,CAAC,CACrBC,UAAU,CAAC;AACPe,EAAAA,UAAU,EAAE;AADL,CAAD,CADW,CAAD,EAIrBV,WAJqB,CAAxB;AAKA,SAASA,WAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = environment.apiUrl;\nlet UserService = class UserService {\n    constructor(http) {\n        this.http = http;\n    }\n    getPublicContent() {\n        return this.http.get(API_URL + 'all', { responseType: 'text' });\n    }\n    getUserBoard() {\n        return this.http.get(API_URL + 'user', { responseType: 'text' });\n    }\n    getAdminBoard() {\n        return this.http.get(API_URL + 'admin', { responseType: 'text' });\n    }\n};\nUserService.ctorParameters = () => [\n    { type: HttpClient }\n];\nUserService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], UserService);\nexport { UserService };\n"]},"metadata":{},"sourceType":"module"}