{"ast":null,"code":"function cov_e13lst18n() {\n  var path = \"/home/usuario/cinemart/Frontend/src/app/services/movies.service.ts\";\n  var hash = \"25a4ae78b90e3b36f6aa62197fe3ae1a64b5dcc5\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/usuario/cinemart/Frontend/src/app/services/movies.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 16\n        },\n        end: {\n          line: 5,\n          column: 44\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 20\n        },\n        end: {\n          line: 8,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 19\n        },\n        end: {\n          line: 19,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 25\n        }\n      },\n      \"4\": {\n        start: {\n          line: 14,\n          column: 8\n        },\n        end: {\n          line: 14,\n          column: 46\n        }\n      },\n      \"5\": {\n        start: {\n          line: 17,\n          column: 8\n        },\n        end: {\n          line: 17,\n          column: 79\n        }\n      },\n      \"6\": {\n        start: {\n          line: 20,\n          column: 0\n        },\n        end: {\n          line: 22,\n          column: 2\n        }\n      },\n      \"7\": {\n        start: {\n          line: 20,\n          column: 36\n        },\n        end: {\n          line: 22,\n          column: 1\n        }\n      },\n      \"8\": {\n        start: {\n          line: 23,\n          column: 0\n        },\n        end: {\n          line: 27,\n          column: 17\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 22\n          },\n          end: {\n            line: 12,\n            column: 5\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 13,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 19\n          },\n          end: {\n            line: 15,\n            column: 5\n          }\n        },\n        line: 13\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 4\n          },\n          end: {\n            line: 16,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 15\n          },\n          end: {\n            line: 18,\n            column: 5\n          }\n        },\n        line: 16\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 20,\n            column: 30\n          },\n          end: {\n            line: 20,\n            column: 31\n          }\n        },\n        loc: {\n          start: {\n            line: 20,\n            column: 36\n          },\n          end: {\n            line: 22,\n            column: 1\n          }\n        },\n        line: 20\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"movies.service.js\",\n      sourceRoot: \"\",\n      sources: [\"/home/usuario/cinemart/Frontend/src/app/services/movies.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAE/D,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC;AAE7C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,WAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;IAMW,YAAY,SAAZ,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;IACxC,CAAC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IACxE,CAAC;CAMF,CAAA;;YA7BQ,UAAU;;AAcN,YAAY;IAJxB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,YAAY,CAexB;SAfY,YAAY\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\\nimport { Observable } from 'rxjs';\\nimport { environment } from 'src/environments/environment';\\n\\nconst API_URL = environment.apiUrl + 'film/';\\n\\nconst httpOptions = {\\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\\n};\\n\\n@Injectable({\\n  providedIn: 'root',\\n})\\n\\nexport class MovieService {\\n\\n  constructor(private http: HttpClient) {}\\n\\n  getAllMovies(): Observable<any> {\\n    return this.http.get(API_URL + 'all');\\n  }\\n  getMovie(): Observable<any> {\\n    return this.http.get(API_URL + 'searchFilm', { responseType: 'json'});\\n  }\\n  // // deleteMovie(name: string): Observable<any> {\\n  // //   return this.http.delete(API_URL + 'delete',\\n  // //   httpOptions\\n  // // );\\n  // }\\n}\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"25a4ae78b90e3b36f6aa62197fe3ae1a64b5dcc5\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_e13lst18n = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_e13lst18n();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = (cov_e13lst18n().s[0]++, environment.apiUrl + 'film/');\nconst httpOptions = (cov_e13lst18n().s[1]++, {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n});\ncov_e13lst18n().s[2]++;\nlet MovieService = class MovieService {\n  constructor(http) {\n    cov_e13lst18n().f[0]++;\n    cov_e13lst18n().s[3]++;\n    this.http = http;\n  }\n\n  getAllMovies() {\n    cov_e13lst18n().f[1]++;\n    cov_e13lst18n().s[4]++;\n    return this.http.get(API_URL + 'all');\n  }\n\n  getMovie() {\n    cov_e13lst18n().f[2]++;\n    cov_e13lst18n().s[5]++;\n    return this.http.get(API_URL + 'searchFilm', {\n      responseType: 'json'\n    });\n  }\n\n};\ncov_e13lst18n().s[6]++;\n\nMovieService.ctorParameters = () => {\n  cov_e13lst18n().f[3]++;\n  cov_e13lst18n().s[7]++;\n  return [{\n    type: HttpClient\n  }];\n};\n\ncov_e13lst18n().s[8]++;\nMovieService = __decorate([Injectable({\n  providedIn: 'root'\n})], MovieService);\nexport { MovieService };","map":{"version":3,"sources":["/home/usuario/cinemart/Frontend/src/app/services/movies.service.ts"],"names":["__decorate","Injectable","HttpClient","HttpHeaders","environment","API_URL","apiUrl","httpOptions","headers","MovieService","constructor","http","getAllMovies","get","getMovie","responseType","ctorParameters","type","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,MAAMC,OAAO,4BAAGD,WAAW,CAACE,MAAZ,GAAqB,OAAxB,CAAb;AACA,MAAMC,WAAW,4BAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIL,WAAJ,CAAgB;AAAE,oBAAgB;AAAlB,GAAhB;AADO,CAAH,CAAjB;;AAGA,IAAIM,YAAY,GAAG,MAAMA,YAAN,CAAmB;AAClCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;AAAA;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDC,EAAAA,YAAY,GAAG;AAAA;AAAA;AACX,WAAO,KAAKD,IAAL,CAAUE,GAAV,CAAcR,OAAO,GAAG,KAAxB,CAAP;AACH;;AACDS,EAAAA,QAAQ,GAAG;AAAA;AAAA;AACP,WAAO,KAAKH,IAAL,CAAUE,GAAV,CAAcR,OAAO,GAAG,YAAxB,EAAsC;AAAEU,MAAAA,YAAY,EAAE;AAAhB,KAAtC,CAAP;AACH;;AATiC,CAAtC;;;AAWAN,YAAY,CAACO,cAAb,GAA8B,MAAM;AAAA;AAAA;AAAA,UAChC;AAAEC,IAAAA,IAAI,EAAEf;AAAR,GADgC;AAEnC,CAFD;;;AAGAO,YAAY,GAAGT,UAAU,CAAC,CACtBC,UAAU,CAAC;AACPiB,EAAAA,UAAU,EAAE;AADL,CAAD,CADY,CAAD,EAItBT,YAJsB,CAAzB;AAKA,SAASA,YAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = environment.apiUrl + 'film/';\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nlet MovieService = class MovieService {\n    constructor(http) {\n        this.http = http;\n    }\n    getAllMovies() {\n        return this.http.get(API_URL + 'all');\n    }\n    getMovie() {\n        return this.http.get(API_URL + 'searchFilm', { responseType: 'json' });\n    }\n};\nMovieService.ctorParameters = () => [\n    { type: HttpClient }\n];\nMovieService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], MovieService);\nexport { MovieService };\n"]},"metadata":{},"sourceType":"module"}