{"ast":null,"code":"function cov_2r8fghnqcj() {\n  var path = \"/home/usuario/cinemart/Frontend/src/app/services/auth.service.ts\";\n  var hash = \"a2c81616a1af3f6bef4cdd5e0cb15091fc77d134\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/home/usuario/cinemart/Frontend/src/app/services/auth.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 16\n        },\n        end: {\n          line: 5,\n          column: 44\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 20\n        },\n        end: {\n          line: 8,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 18\n        },\n        end: {\n          line: 29,\n          column: 1\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 25\n        }\n      },\n      \"4\": {\n        start: {\n          line: 14,\n          column: 8\n        },\n        end: {\n          line: 17,\n          column: 24\n        }\n      },\n      \"5\": {\n        start: {\n          line: 20,\n          column: 8\n        },\n        end: {\n          line: 24,\n          column: 24\n        }\n      },\n      \"6\": {\n        start: {\n          line: 27,\n          column: 8\n        },\n        end: {\n          line: 27,\n          column: 68\n        }\n      },\n      \"7\": {\n        start: {\n          line: 30,\n          column: 0\n        },\n        end: {\n          line: 32,\n          column: 2\n        }\n      },\n      \"8\": {\n        start: {\n          line: 30,\n          column: 35\n        },\n        end: {\n          line: 32,\n          column: 1\n        }\n      },\n      \"9\": {\n        start: {\n          line: 33,\n          column: 0\n        },\n        end: {\n          line: 37,\n          column: 16\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 22\n          },\n          end: {\n            line: 12,\n            column: 5\n          }\n        },\n        line: 10\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 13,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 30\n          },\n          end: {\n            line: 18,\n            column: 5\n          }\n        },\n        line: 13\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 19,\n            column: 4\n          },\n          end: {\n            line: 19,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 19,\n            column: 40\n          },\n          end: {\n            line: 25,\n            column: 5\n          }\n        },\n        line: 19\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 26,\n            column: 4\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 26,\n            column: 13\n          },\n          end: {\n            line: 28,\n            column: 5\n          }\n        },\n        line: 26\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 30,\n            column: 29\n          },\n          end: {\n            line: 30,\n            column: 30\n          }\n        },\n        loc: {\n          start: {\n            line: 30,\n            column: 35\n          },\n          end: {\n            line: 32,\n            column: 1\n          }\n        },\n        line: 30\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"auth.service.js\",\n      sourceRoot: \"\",\n      sources: [\"/home/usuario/cinemart/Frontend/src/app/services/auth.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAE/D,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC;AAE7C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,WAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;IAKW,WAAW,SAAX,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,OAAO,GAAG,QAAQ,EAClB;YACE,QAAQ;YACR,QAAQ;SACT,EACD,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,QAAgB,EAAE,KAAa,EAAE,QAAgB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,OAAO,GAAG,QAAQ,EAClB;YACE,QAAQ;YACR,KAAK;YACL,QAAQ;SACT,EACD,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,EAAG,EAAE,WAAW,CAAC,CAAC;IAC/D,CAAC;CACF,CAAA;;YA1CQ,UAAU;;AAaN,WAAW;IAHvB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA6BvB;SA7BY,WAAW\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\\nimport { Observable } from 'rxjs';\\nimport { environment } from 'src/environments/environment';\\n\\nconst API_URL = environment.apiUrl + 'auth/';\\n\\nconst httpOptions = {\\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\\n};\\n\\n@Injectable({\\n  providedIn: 'root',\\n})\\nexport class AuthService {\\n  constructor(private http: HttpClient) {}\\n\\n  login(username: string, password: string): Observable<any> {\\n    return this.http.post(\\n      API_URL + 'signin',\\n      {\\n        username,\\n        password,\\n      },\\n      httpOptions\\n    );\\n  }\\n\\n  register(username: string, email: string, password: string): Observable<any> {\\n    return this.http.post(\\n      API_URL + 'signup',\\n      {\\n        username,\\n        email,\\n        password,\\n      },\\n      httpOptions\\n    );\\n  }\\n\\n  logout(): Observable<any> {\\n    return this.http.post(API_URL + 'signout', { }, httpOptions);\\n  }\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a2c81616a1af3f6bef4cdd5e0cb15091fc77d134\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2r8fghnqcj = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2r8fghnqcj();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = (cov_2r8fghnqcj().s[0]++, environment.apiUrl + 'auth/');\nconst httpOptions = (cov_2r8fghnqcj().s[1]++, {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n});\ncov_2r8fghnqcj().s[2]++;\nlet AuthService = class AuthService {\n  constructor(http) {\n    cov_2r8fghnqcj().f[0]++;\n    cov_2r8fghnqcj().s[3]++;\n    this.http = http;\n  }\n\n  login(username, password) {\n    cov_2r8fghnqcj().f[1]++;\n    cov_2r8fghnqcj().s[4]++;\n    return this.http.post(API_URL + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username, email, password) {\n    cov_2r8fghnqcj().f[2]++;\n    cov_2r8fghnqcj().s[5]++;\n    return this.http.post(API_URL + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n\n  logout() {\n    cov_2r8fghnqcj().f[3]++;\n    cov_2r8fghnqcj().s[6]++;\n    return this.http.post(API_URL + 'signout', {}, httpOptions);\n  }\n\n};\ncov_2r8fghnqcj().s[7]++;\n\nAuthService.ctorParameters = () => {\n  cov_2r8fghnqcj().f[4]++;\n  cov_2r8fghnqcj().s[8]++;\n  return [{\n    type: HttpClient\n  }];\n};\n\ncov_2r8fghnqcj().s[9]++;\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"sources":["/home/usuario/cinemart/Frontend/src/app/services/auth.service.ts"],"names":["__decorate","Injectable","HttpClient","HttpHeaders","environment","API_URL","apiUrl","httpOptions","headers","AuthService","constructor","http","login","username","password","post","register","email","logout","ctorParameters","type","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,MAAMC,OAAO,6BAAGD,WAAW,CAACE,MAAZ,GAAqB,OAAxB,CAAb;AACA,MAAMC,WAAW,6BAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIL,WAAJ,CAAgB;AAAE,oBAAgB;AAAlB,GAAhB;AADO,CAAH,CAAjB;;AAGA,IAAIM,WAAW,GAAG,MAAMA,WAAN,CAAkB;AAChCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;AAAA;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAA;AAAA;AACtB,WAAO,KAAKH,IAAL,CAAUI,IAAV,CAAeV,OAAO,GAAG,QAAzB,EAAmC;AACtCQ,MAAAA,QADsC;AAEtCC,MAAAA;AAFsC,KAAnC,EAGJP,WAHI,CAAP;AAIH;;AACDS,EAAAA,QAAQ,CAACH,QAAD,EAAWI,KAAX,EAAkBH,QAAlB,EAA4B;AAAA;AAAA;AAChC,WAAO,KAAKH,IAAL,CAAUI,IAAV,CAAeV,OAAO,GAAG,QAAzB,EAAmC;AACtCQ,MAAAA,QADsC;AAEtCI,MAAAA,KAFsC;AAGtCH,MAAAA;AAHsC,KAAnC,EAIJP,WAJI,CAAP;AAKH;;AACDW,EAAAA,MAAM,GAAG;AAAA;AAAA;AACL,WAAO,KAAKP,IAAL,CAAUI,IAAV,CAAeV,OAAO,GAAG,SAAzB,EAAoC,EAApC,EAAwCE,WAAxC,CAAP;AACH;;AAnB+B,CAApC;;;AAqBAE,WAAW,CAACU,cAAZ,GAA6B,MAAM;AAAA;AAAA;AAAA,UAC/B;AAAEC,IAAAA,IAAI,EAAElB;AAAR,GAD+B;AAElC,CAFD;;;AAGAO,WAAW,GAAGT,UAAU,CAAC,CACrBC,UAAU,CAAC;AACPoB,EAAAA,UAAU,EAAE;AADL,CAAD,CADW,CAAD,EAIrBZ,WAJqB,CAAxB;AAKA,SAASA,WAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nconst API_URL = environment.apiUrl + 'auth/';\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nlet AuthService = class AuthService {\n    constructor(http) {\n        this.http = http;\n    }\n    login(username, password) {\n        return this.http.post(API_URL + 'signin', {\n            username,\n            password,\n        }, httpOptions);\n    }\n    register(username, email, password) {\n        return this.http.post(API_URL + 'signup', {\n            username,\n            email,\n            password,\n        }, httpOptions);\n    }\n    logout() {\n        return this.http.post(API_URL + 'signout', {}, httpOptions);\n    }\n};\nAuthService.ctorParameters = () => [\n    { type: HttpClient }\n];\nAuthService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], AuthService);\nexport { AuthService };\n"]},"metadata":{},"sourceType":"module"}